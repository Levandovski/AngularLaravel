{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.sass","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,gCAAgC,sBAAsB,mBAAmB,kBAAkB,GAAG,6CAA6C,2V;;;;;;;;;;;ACA3I,mc;;;;;;;;;;;;;;;;;;;;ACA0C;AAEI;AAC4B;AAC7B;AAO7C;IAIE,sBACS,MAAiB,EACjB,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAW;QACjB,gBAAW,GAAX,WAAW,CAAa;QALjC,UAAK,GAAG,QAAQ,CAAC;IAKkB,CAAC;IAClC,+BAAQ,GAAR;QACE,oEAAoE;QACpE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACpC,CAAC;IACH,iCAAU,GAAV;QAAA,iBAWC;QAVC,IAAM,SAAS,GAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACnD,KAAK,EAAC,OAAO;SAChB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC7B,UAAC,MAAM;YACL,IAAG,MAAM,EAAC;gBACR,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aACtD;QACH,CAAC,CACJ,CAAC;IACJ,CAAC;IAtBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAMiB,2DAAS;YACJ,yDAAW;OANtB,YAAY,CAuBxB;IAAD,mBAAC;CAAA;AAvBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACyB;AACW;AACrB;AACH;AACS;AACP;AACE;AACJ;AACM;AACJ;AACI;AACF;AACF;AAER;AACS;AACF;AACoB;AAE7B;AAuC7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QApCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,mEAAa;gBACb,uFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,sEAAgB;gBAEhB,iEAAe;gBACf,sEAAc;gBACd,wEAAe;gBACf,qEAAa;gBACb,2EAAgB;gBAChB,oEAAa;gBACb,2EAAgB;gBAChB,yEAAe;gBACf,uEAAc;gBACd,uEAAc;aAEf;YAED,eAAe,EAAE;gBACf,uFAAmB;aACpB;YACD,SAAS,EAAE;gBACT,0DAAW;aACZ;YAED,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5DtB,0hDAA0hD,aAAa,wQ;;;;;;;;;;;ACAviD,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAb;AACD;AAClB;AAO/B;IAME,6BACS,SAA4C;QAA5C,cAAS,GAAT,SAAS,CAAmC;QAN7C,gBAAW,GAAS,EAAE,CAAC;QACvB,UAAK,GAAC;YACZ,IAAI,EAAE,IAAI,0CAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACtC,OAAO,EAAE,IAAI;SACd,CAAC;IAEsD,CAAC;IAEzD,sCAAQ,GAAR;IACA,CAAC;IACD,0CAAY,GAAZ,UAAa,KAAK;QAChB,qCAAqC;QACrC,IAAI,CAAC,WAAW,GAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,oCAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IACD,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IArBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;+EAQoB,8DAAY;OAPrB,mBAAmB,CAsB/B;IAAD,0BAAC;CAAA;AAtB+B;;;;;;;;;;;;;;;;;;;;ACTW;AAEb;AAC8C;AAG5E;IAEE,qBAAoB,IAAgB;QAApC,iBAmBC;QAnBmB,SAAI,GAAJ,IAAI,CAAY;QAD7B,UAAK,GAAS,EAAE,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9B,UAAC,KAAY;YACX,KAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAC;gBAAf,IAAI,CAAC;gBACP,KAAI,CAAC,KAAK,CAAC,IAAI,CACX,IAAI,0CAAI,CACN,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,MAAM,EACR,CAAC,CAAC,SAAS,EACX,CAAC,CAAC,KAAK,EACP,CAAC,CAAC,QAAQ,EACV,CAAC,CAAC,OAAO,EACT,CAAC,CAAC,EAAE,EACJ,CAAC,CAAC,KAAK,CACR,CACJ,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IACD,4BAAM,GAAN,UAAO,IAAU,EAAE,IAAU;QAA7B,iBA+BC;QA9BC,IAAM,UAAU,GAAE,IAAI,QAAQ,EAAE,CAAC;QACjC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EACjC,EAAC,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC;aACvC,SAAS,CAAC,UAAC,KAAU;YACpB,IAAG,KAAK,CAAC,IAAI,IAAE,kEAAa,CAAC,QAAQ,EAAC,EAAC,qFAAqF;gBACxH,qBAAqB;gBACrB,IAAI,CAAC,GAAE,KAAK,CAAC,IAAI,CAAC;gBAClB,KAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CACN,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,MAAM,EACR,CAAC,CAAC,SAAS,EACX,CAAC,CAAC,KAAK,EACP,CAAC,CAAC,QAAQ,EACV,CAAC,CAAC,OAAO,EACT,CAAC,CAAC,EAAE,EACJ,CAAC,CAAC,KAAK,CACR,CAAC,CAAC;aACN;YACH,IAAG,KAAK,CAAC,IAAI,IAAE,kEAAa,CAAC,cAAc,EAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACG,0BAAI,GAAJ,UAAK,EAAU;QAAf,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,SAAS,CACxC,UAAC,KAAU;YACP,qBAAqB;YACrB,IAAI,CAAC,GAAE,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,EAAE,IAAG,EAAE,EAAT,CAAS,CAAC,CAAC;YACzC,CAAC,CAAC,KAAK,GAAC,KAAK,CAAC,KAAK,CAAC;QACxB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,4BAAM,GAAN,UAAO,EAAU;QAAjB,iBASG;QARD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,SAAS,CACtC,UAAC,KAAU;YACT,IAAI,CAAC,GAAE,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;YAC/C,IAAG,CAAC,IAAE,CAAC,EAAC,EAAC,2CAA2C;gBAClD,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,gDAAgD;aACzE;QACH,CAAC,CACF,CAAC;IACF,CAAC;IAxEI,WAAW;QADvB,gEAAU,EAAE;+EAGe,+DAAU;OAFzB,WAAW,CAyEvB;IAAD,kBAAC;CAAA;AAzEuB;;;;;;;;;;;;;ACNxB;AAAA;AAAA;IACI,cACW,IAAY,EACZ,MAAc,EACd,SAAiB,EACjB,KAAa,EACb,QAAgB,EAChB,OAAgB,EAChB,EAAW,EACX,KAAc;QAPd,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,YAAO,GAAP,OAAO,CAAS;QAChB,OAAE,GAAF,EAAE,CAAS;QACX,UAAK,GAAL,KAAK,CAAS;IAGzB,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACbD,wBAAwB,uBAAuB,mBAAmB,GAAG,6CAA6C,+T;;;;;;;;;;;ACAlH,kIAAkI,aAAa,4CAA4C,gBAAgB,mFAAmF,cAAc,yEAAyE,eAAe,mb;;;;;;;;;;;;;;;;;;;ACA3U;AAC1B;AACe;AAO9C;IAIE,uBACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,gCAAQ,GAAR;IACA,CAAC;IACD,4BAAI,GAAJ;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IACD,8BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAbQ;QAAR,2DAAK,EAAE;wEAAO,0CAAI;+CAAC;IAFT,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAMuB,yDAAW;OALvB,aAAa,CAgBzB;IAAD,oBAAC;CAAA;AAhByB;;;;;;;;;;;;;ACT1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button{\\n    position: fixed;\\n    bottom: 40px;\\n    right: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsb2F0LWJ1dHRvbntcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiA0MHB4O1xuICAgIHJpZ2h0OiA0MHB4O1xufSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n<span>Project: Laravel + Angular</span>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider><!--Código para separar com linha o visual-->\\n\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\n  <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\n</div>\\n  <button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n<mat-icon>add</mat-icon>\\n</button>\\n\"","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meuapp';\n  private posts: Post[];\n  \n  constructor(\n    public dialog: MatDialog,\n    public postService: PostService){}\n    ngOnInit(){\n      //Essa função é chamada após o construtor chamar toda parte gráfica \n      this.posts=this.postService.posts;\n    }\n  openDialog(){\n    const dialogRef= this.dialog.open(PostDialogComponent, {\n        width:'600px'\n    });\n    dialogRef.afterClosed().subscribe(\n        (result) =>{\n          if(result){\n            this.postService.salvar(result.post, result.arquivo);\n          }\n        }\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule, MatDialog } from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PortalHostDirective } from '@angular/cdk/portal';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n\n  entryComponents: [\n    PostDialogComponent\n  ],\n  providers: [\n    PostService\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\">\\n    <div fxlayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n      <mat-form-field fxFlex=\\\"50\\\">\\n        <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\n        <mat-hint>Digite aqui seu nome</mat-hint>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"50\\\">\\n          <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\">\\n          <mat-hint>Digite aqui seu email</mat-hint>\\n        </mat-form-field>\\n    </div>\\n    <div fxlayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n          <input matInput placeholder=\\\"Seu titulo\\\" [(ngModel)]=\\\"dados.post.titulo\\\">\\n          <mat-hint>Digite aqui seu noTitulome</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Seu subtitulo\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">\\n            <mat-hint>Digite aqui seu subtitulo</mat-hint>\\n          </mat-form-field>  \\n    </div>\\n        <mat-form-field>\\n            <textarea matInput placeholder=\\\"Deixe sua mensagem aqui\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\n        </mat-form-field>\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display:none\\\" (change)=\\\"mudouarquivo($event)\\\" #fileinput>\\n\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\n  <mat-icon>add_a_photo</mat-icon>\\n  Adicionar uma foto\\n</button>\\n<p *ngIf=\\\"nomearquivo!=''\\\">\\n  <strong>Arquivo: </strong>\\n  {{nomearquivo}}\\n  <mat-icon color=\\\"primary\\\">done</mat-icon>\\n</p>\\n\\n<br>\\n<br>\\n\\n<div style=\\\"text-align:center\\\">\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">Ok</button>\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtZGlhbG9nL3Bvc3QtZGlhbG9nLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.sass']\n})\nexport class PostDialogComponent implements OnInit {\n  private nomearquivo:string ='';\n  private dados={\n    post: new Post(\"\", \"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  };\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>){ }\n\n  ngOnInit() {\n  }\n  mudouarquivo(event){\n    //console.log(event.target.files[0]);\n    this.nomearquivo= event.target.files[0].name;\n    this.dados.arquivo=event.target.files[0];\n  }\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n  cancelar(){\n    this.dialogref.close(null);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Post } from './post';\nimport { HttpEventType, HttpEvent, HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class PostService {\n  public posts: Post[]=[];\n  constructor(private http: HttpClient) { \n    this.http.get(\"/api/\").subscribe(\n      (posts: any[])=>{\n        for(let p of posts){\n          this.posts.push(\n              new Post(\n                p.nome,\n                p.titulo,\n                p.subtitulo,\n                p.email,\n                p.mensagem,\n                p.arquivo,\n                p.id,\n                p.likes\n              )\n          );\n        }       \n      }\n    );\n  }\n  salvar(post: Post, file: File){\n    const uploadData= new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n    this.http.post(\"/api\", uploadData,\n    {reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n        if(event.type==HttpEventType.Response){//Estamos recebendo nosso response lá do laravel após inserir o dado na base de dados\n            //console.log(event);\n            let p= event.body;\n            this.posts.push(\n              new Post(\n                p.nome,\n                p.titulo,\n                p.subtitulo,\n                p.email,\n                p.mensagem,\n                p.arquivo,\n                p.id,\n                p.likes\n              ));\n          }\n        if(event.type==HttpEventType.UploadProgress){\n            console.log('UploadProgress');\n            console.log(event);\n        }\n      });\n  }\n      like(id: number){\n        this.http.get('/api/like/' + id).subscribe(\n          (event: any) => {\n              //console.log(event);\n              let p= this.posts.find((p) => p.id ==id);\n              p.likes=event.likes;\n          }\n        );\n      }\n      apagar(id: number){\n        this.http.delete('/api/' + id).subscribe(\n          (event: any) => {\n            let i= this.posts.findIndex((p) => p.id == id);\n            if(i>=0){//se retornar -1 é porque não econtrou nada\n              this.posts.splice(i,1); //significa que vamos retirar isso do nosso post\n            }\n          }\n        );\n        }\n}\n","export class Post{\n    constructor(\n        public nome: string,\n        public titulo: string,\n        public subtitulo: string,\n        public email: string,\n        public mensagem: string,\n        public arquivo?: string,\n        public id?: number,\n        public likes?: number\n    ){\n            \n    }\n}","module.exports = \".card{\\n    max-width: 300px;\\n    margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmR7XG4gICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICBtYXJnaW46IDEwcHg7XG59Il19 */\"","module.exports = \"\\n<mat-card fxFlex class=\\\"card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>{{post.titulo}}</mat-card-title>\\n    <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"/storage/{{post.arquivo}}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n  <mat-card-content>\\n    <p>\\n      {{post.mensagem}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"pramary\\\" (click)=\\\"like()\\\">LIKE</button>\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"apagar()\\\">APAGAR</button>\\n    <mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" [matBadge]=\\\"post.likes\\\"\\n        matBadgePosition=\\\"above after\\\" matBadgeColor=\\\"warn\\\" matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(\n    private postService: PostService\n  ) { }\n\n  ngOnInit() {\n  }\n  like(){\n    this.postService.like(this.post.id);\n  }\n  apagar(){\n    this.postService.apagar(this.post.id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}